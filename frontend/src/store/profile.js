import { defineStore } from "pinia";
import { usePlayerStore } from "@/store/player";
import { ref, computed } from "vue";
import api from "@/utils/axios";

export const useProfileStore = defineStore("profile", () => {
  const playerStore = usePlayerStore();
  const profile = computed(() => playerStore.player); // ‚úÖ –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤

  function getCookie(name) {
    const match = document.cookie.match(new RegExp("(^| )" + name + "=([^;]+)"));
    return match ? match[2] : null;
  }

  async function updateBio(newBio) {
    const csrfToken = getCookie("csrf_access_token");
  
    // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ—á–∏—â–∞–µ–º –±–∏–æ –æ—Ç null/undefined
    const safeBio = typeof newBio === "string" ? newBio.trim() : "";
  
    // üßº –ï—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî –Ω–µ —à–ª—ë–º –≤–æ–æ–±—â–µ (–º–æ–∂–µ—à—å —É–±—Ä–∞—Ç—å —ç—Ç–æ, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø—É—Å—Ç–æ–µ –±–∏–æ)
    if (!safeBio) {
      console.warn("üì≠ –ü—É—Å—Ç–æ–µ –±–∏–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è.");
      return;
    }
  
    try {
      const res = await api.post(
        "/profile/edit_bio",
        { bio: safeBio },
        {
          withCredentials: true,
          headers: {
            "X-CSRF-TOKEN": csrfToken,
          },
        }
      );
  
      if (res.data.success) {
        console.log("‚úÖ –ë–∏–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:", res.data.bio);
        await playerStore.fetchPlayer(); // üíæ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∏–æ:", err);
    }
  }
  

  async function uploadAvatar(file) {
    if (!file) return;
  
    const formData = new FormData();
    formData.append("avatar", file);
  
    const csrfToken = getCookie("csrf_access_token");
  
    try {
      const res = await api.post("/profile/upload-avatar", formData, {
        withCredentials: true,
        headers: {
          "X-CSRF-TOKEN": csrfToken, // ‚¨ÖÔ∏è —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º Content-Type
        },
      });
  
      if (res.data.avatarUrl) {
        console.log("‚úÖ –ê–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω:", res.data.avatarUrl);
        await playerStore.fetchPlayer(); // üíæ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞:", err);
    }
  }

  return { profile, updateBio, uploadAvatar }; // ‚¨ÖÔ∏è –í–û–¢ –≠–¢–û –í–ê–ñ–ù–û
});




