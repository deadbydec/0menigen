import { defineStore } from "pinia";
import axios from "@/utils/axios";

export const useAchievementsStore = defineStore("achievements", {
  state: () => ({
    achievements: [],
  }),

  actions: {
    // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—á–∏–≤–∫–∏ —é–∑–µ—Ä–∞
    async fetchAchievements() {
      try {
        const token = localStorage.getItem("auth_token");
        const res = await axios.get("/achievements", {
          headers: { Authorization: `Bearer ${token}` },
        });

        this.achievements = res.data; // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ store
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—á–∏–≤–æ–∫:", err);
      }
    },

    // ‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∞—á–∏–≤–∫—É
    async unlockAchievement(achievement_id) {
      try {
        const res = await axios.post(
          "api/achievements/unlock",
          { achievement_id },
          {
            headers: { Authorization: `Bearer ${localStorage.getItem("auth_token")}` },
          }
        );

        if (res.data.success) {
          await this.fetchAchievements(); // üî• –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è
        }
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –∞—á–∏–≤–∫–∏:", err);
      }
    },
  },
});

