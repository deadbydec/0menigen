import { defineStore } from "pinia"
import { ref } from "vue"
import api from "@/utils/axios"

export const useQuestStore = defineStore("quests", () => {
  const npcs = ref([])                // –≤—Å–µ –∫–≤–µ—Å—Ç–æ–¥–∞—Ç–µ–ª–∏
  const activeQuests = ref([])       // –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
  const currentQuest = ref(null)     // —Ç–µ–∫—É—â–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π (–¥–µ—Ç–∞–ª—å–Ω—ã–π) –∫–≤–µ—Å—Ç

  // üß† –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö NPC
  async function fetchNPCs() {
    try {
      const res = await api.get("/npc-quests/list")
      npcs.value = res.data || []
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ NPC:", err)
    }
  }

  // üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –∫–≤–µ—Å—Ç—ã (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 24—á)
  async function fetchActiveQuests() {
    try {
      const res = await api.get("/npc-quests/my")
      activeQuests.value = res.data || []
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤:", err)
    }
  }

  // üì• –ü—Ä–∏–Ω—è—Ç—å –∫–≤–µ—Å—Ç —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ NPC
  async function acceptQuest(npcId) {
    try {
      const res = await api.post(`/npc-quests/accept`, null, {
        params: { npc_id: npcId },
      })
      await fetchActiveQuests()
      return res.data
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∫–≤–µ—Å—Ç–∞:", err)
      throw err
    }
  }

  // üì§ –°–¥–∞—Ç—å –∫–≤–µ—Å—Ç
  async function turnInQuest(questId) {
    try {
      const res = await api.post("/npc-quests/turn-in", {
        quest_id: questId,
      })
      await fetchActiveQuests()
      return res.data
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–¥–∞—á–∏ –∫–≤–µ—Å—Ç–∞:", err)
      throw err
    }
  }

  // üìé –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è NPC –∫–∞—Ä—Ç–æ—á–∫–∏
  function setCurrentQuest(quest) {
    currentQuest.value = quest
  }

  return {
    npcs,
    activeQuests,
    currentQuest,
    fetchNPCs,
    fetchActiveQuests,
    acceptQuest,
    turnInQuest,
    setCurrentQuest,
  }
})
