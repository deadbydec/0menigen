"""fix base

Revision ID: 2402cee774f7
Revises: 
Create Date: 2025-05-31 23:19:33.307565

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2402cee774f7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.Column('trigger_type', sa.Enum('ITEM_OBTAINED', 'ITEM_USED', 'BOOK_READ', 'COLLECTION_COMPLETED', 'ACTIVITY_DONE', 'DAILY_COMPLETED', 'INVENTORY_FULL', 'TOILET_VISITED', 'MESSAGE_SENT', 'FRIEND_ADDED', 'GIFT_SENT', 'SECRET_FOUND', 'NULLING_EARNED', 'LEVEL_REACHED', name='achievement_trigger_type'), nullable=False),
    sa.Column('trigger_data', sa.JSON(), nullable=True),
    sa.Column('reward', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('DAILY', 'NPC', 'SPECIAL', 'HIDDEN', 'STORY', name='activity_type_enum'), nullable=False),
    sa.Column('reward', sa.JSON(), nullable=True),
    sa.Column('cooldown_seconds', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forum_threads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(length=100), nullable=True),
    sa.Column('rarity', sa.Enum('trash', 'common', 'prize', 'rare', 'epic', 'legendary', 'special', 'unique', 'elder', 'vanished', 'glitched', 'void', name='product_rarity'), nullable=False),
    sa.Column('product_type', sa.Enum('food', 'drink', 'sweet', 'drug', 'collectible', 'cosmetic', 'weapon', 'resource', 'toy', 'souvenir', 'artifact', 'creature', 'book', 'tech', 'sticker', 'toilet', name='product_type'), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.Column('custom', sa.JSON(), nullable=True),
    sa.Column('is_nulling_only', sa.Boolean(), nullable=True),
    sa.Column('nulling_price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('races',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('vibe', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_selectable', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('token_bl',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_token_bl_jti'), 'token_bl', ['jti'], unique=False)
    op.create_table('book_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_activity_pool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('nicknames', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('is_email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('email_token', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(length=200), nullable=False),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('coins', sa.Integer(), nullable=True),
    sa.Column('nullings', sa.Float(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('layout', sa.Text(), nullable=True),
    sa.Column('total_playtime', sa.Float(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'NONBINARY', 'UNKNOWN', name='gender'), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('user_type', sa.Enum('OMEZKA', 'OMEGAN', 'OMEGAKRUT', name='user_type'), nullable=False),
    sa.Column('last_ips', sa.ARRAY(postgresql.INET()), nullable=True),
    sa.Column('warning_count', sa.Integer(), nullable=True),
    sa.Column('registration_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('vip_status', sa.Enum('NONE', 'CRYPTOVOID', 'NULLOVERLORD', name='vip_status'), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('shop_balance', sa.Integer(), nullable=True),
    sa.Column('vault_balance', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('pet_slots', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('forum_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['thread_id'], ['forum_threads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_scores_id'), 'game_scores', ['id'], unique=False)
    op.create_table('landfill_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('thrown_by_id', sa.Integer(), nullable=True),
    sa.Column('thrown_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['thrown_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('landfill_pickup_limit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leaderboard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match3_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('combos', sa.Integer(), nullable=True),
    sa.Column('coins_earned', sa.Integer(), nullable=True),
    sa.Column('xp_earned', sa.Integer(), nullable=True),
    sa.Column('is_rewarded', sa.Boolean(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('personal_shop_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('birthdate', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('race_code', sa.String(length=50), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('intelligence', sa.Integer(), nullable=True),
    sa.Column('fullness', sa.Integer(), nullable=True),
    sa.Column('energy', sa.Integer(), nullable=True),
    sa.Column('health', sa.Integer(), nullable=True),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('bond', sa.Integer(), nullable=True),
    sa.Column('trait', sa.String(length=100), nullable=True),
    sa.Column('favorite_foods', sa.JSON(), nullable=True),
    sa.Column('anomaly_level', sa.Integer(), nullable=True),
    sa.Column('ai_persona', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_update', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pets_user_id'), 'pets', ['user_id'], unique=False)
    op.create_table('private_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=200), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_per_unit', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('message_type', sa.Enum('ADMIN', 'RANDOM_EVENT', 'EVENT_NEGATIVE', 'EVENT_POSITIVE', 'BOT', 'LEVEL_UP', 'AUCTION_RESULT', 'TRADE_PROPOSAL', 'AI_ASSISTANT', 'FRIEND_REQUEST', 'FRIEND_ACCEPTED', 'FRIEND_REJECTED', 'FRIEND_CANCELLED', 'NPC_EVENT', 'REPUTATION', 'GIFT', 'GIFT_RECEIVED', 'GIFT_ACCEPTED', 'GIFT_REJECTED', name='system_message_type'), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('is_actioned', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('toilet_cooldowns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('next_available', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['target_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('toilet_doom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('clean', sa.Boolean(), nullable=True),
    sa.Column('last_visit', sa.DateTime(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('dislike_count', sa.Integer(), nullable=True),
    sa.Column('decor', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('toilet_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('vote_type', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['target_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.String(length=50), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_activity_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('current', sa.Integer(), nullable=True),
    sa.Column('goal', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_collection_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_daily_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.Date(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_inventory_product_id'), 'user_inventory', ['product_id'], unique=False)
    op.create_index(op.f('ix_user_inventory_user_id'), 'user_inventory', ['user_id'], unique=False)
    op.create_table('user_library',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_pet_wardrobe_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('slot', sa.Enum('background', 'aura', 'companion', 'body', 'interior', 'dye', 'makeup', 'paws', 'wings', 'eyes', 'head', 'tail', 'accessory', 'face', 'skin', 'base', 'foreground', 'tattoo', 'glow', 'floor', 'neck', 'ears', 'gadget', name='wardrobeslot'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_pet_wardrobe_items_user_id'), 'user_pet_wardrobe_items', ['user_id'], unique=False)
    op.create_table('vault_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wall_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pending_gifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['user_inventory.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pending_gifts_id'), 'pending_gifts', ['id'], unique=False)
    op.create_table('pet_appearance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=True),
    sa.Column('slot', sa.Enum('background', 'aura', 'companion', 'body', 'interior', 'dye', 'makeup', 'paws', 'wings', 'eyes', 'head', 'tail', 'accessory', 'face', 'skin', 'base', 'foreground', 'tattoo', 'glow', 'floor', 'neck', 'ears', 'gadget', name='wardrobeslot'), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('layer_index', sa.Integer(), nullable=False),
    sa.Column('wardrobe_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wardrobe_id'], ['user_pet_wardrobe_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pet_id', 'slot', 'layer_index', name='uq_pet_slot_layer')
    )
    op.create_index(op.f('ix_pet_appearance_pet_id'), 'pet_appearance', ['pet_id'], unique=False)
    op.create_index('ix_pet_slot', 'pet_appearance', ['pet_id', 'slot'], unique=False)
    op.create_table('pet_incubation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('inventory_item_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hatch_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_hatched', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['user_inventory.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('uq_one_active_incubation', 'pet_incubation', ['user_id'], unique=True, postgresql_where=sa.text('is_hatched = false'))
    op.create_table('pet_render_config',
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('slot_order', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pet_id')
    )
    op.create_table('pet_render_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('theme', sa.String(length=100), nullable=True),
    sa.Column('slot_order', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('appearance', sa.JSON(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('votes', sa.Integer(), nullable=True),
    sa.Column('contest_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contest_id'], ['contests.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pet_id', 'contest_id', name='uq_pet_contest_snapshot')
    )
    op.create_index(op.f('ix_pet_render_snapshots_pet_id'), 'pet_render_snapshots', ['pet_id'], unique=False)
    op.create_index(op.f('ix_pet_render_snapshots_user_id'), 'pet_render_snapshots', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pet_render_snapshots_user_id'), table_name='pet_render_snapshots')
    op.drop_index(op.f('ix_pet_render_snapshots_pet_id'), table_name='pet_render_snapshots')
    op.drop_table('pet_render_snapshots')
    op.drop_table('pet_render_config')
    op.drop_index('uq_one_active_incubation', table_name='pet_incubation', postgresql_where=sa.text('is_hatched = false'))
    op.drop_table('pet_incubation')
    op.drop_index('ix_pet_slot', table_name='pet_appearance')
    op.drop_index(op.f('ix_pet_appearance_pet_id'), table_name='pet_appearance')
    op.drop_table('pet_appearance')
    op.drop_index(op.f('ix_pending_gifts_id'), table_name='pending_gifts')
    op.drop_table('pending_gifts')
    op.drop_table('wall_posts')
    op.drop_table('vault_items')
    op.drop_index(op.f('ix_user_pet_wardrobe_items_user_id'), table_name='user_pet_wardrobe_items')
    op.drop_table('user_pet_wardrobe_items')
    op.drop_table('user_library')
    op.drop_index(op.f('ix_user_inventory_user_id'), table_name='user_inventory')
    op.drop_index(op.f('ix_user_inventory_product_id'), table_name='user_inventory')
    op.drop_table('user_inventory')
    op.drop_table('user_daily_activities')
    op.drop_table('user_collection_items')
    op.drop_table('user_activity_progress')
    op.drop_table('user_activities')
    op.drop_table('user_achievements')
    op.drop_table('toilet_votes')
    op.drop_table('toilet_doom')
    op.drop_table('toilet_cooldowns')
    op.drop_table('system_messages')
    op.drop_table('shop_transactions')
    op.drop_table('private_message')
    op.drop_index(op.f('ix_pets_user_id'), table_name='pets')
    op.drop_table('pets')
    op.drop_table('personal_shop_items')
    op.drop_table('match3_scores')
    op.drop_table('leaderboard')
    op.drop_table('landfill_pickup_limit')
    op.drop_table('landfill_items')
    op.drop_index(op.f('ix_game_scores_id'), table_name='game_scores')
    op.drop_table('game_scores')
    op.drop_table('friends')
    op.drop_table('forum_posts')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_table('daily_activity_pool')
    op.drop_table('collection_items')
    op.drop_table('book_content')
    op.drop_index(op.f('ix_token_bl_jti'), table_name='token_bl')
    op.drop_table('token_bl')
    op.drop_table('roles')
    op.drop_table('races')
    op.drop_table('products')
    op.drop_table('news')
    op.drop_table('forum_threads')
    op.drop_table('contests')
    op.drop_table('collections')
    op.drop_table('activities')
    op.drop_table('achievements')
    # ### end Alembic commands ###
