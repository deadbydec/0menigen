# force_shop_reset.py
import asyncio
import json
from redis.asyncio import Redis
from database import get_db
from routes.shop import smart_shop_update

async def force_shop_reset():
    redis = Redis.from_url("redis://localhost", decode_responses=True)

    # üí£ –û–±–Ω—É–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞
    await redis.set("global_shop_reset_hour", -1)
    print("üí£ –ß–∞—Å —Å–±—Ä–æ—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ -1")

    # üß† –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ async –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    db_gen = get_db()
    db = await db_gen.__anext__()

    try:
        await smart_shop_update(db)
        print("‚úÖ –ú–∞–≥–∞–∑–∏–Ω —Å–±—Ä–æ—à–µ–Ω –≤—Ä—É—á–Ω—É—é!")
    finally:
        await db_gen.aclose()

if __name__ == "__main__":
    asyncio.run(force_shop_reset())

